// Code generated by Kitex v0.9.1. DO NOT EDIT.

package hello

import (
	"bytes"
	"fmt"
	"reflect"
	"strings"

	"github.com/apache/thrift/lib/go/thrift"
)

// unused protection
var (
	_ = fmt.Formatter(nil)
	_ = (*bytes.Buffer)(nil)
	_ = (*strings.Builder)(nil)
	_ = reflect.Type(nil)
	_ = thrift.TProtocol(nil)
)

type GreetServiceGreetArgs struct {
	Req string `thrift:"req,1" frugal:"1,default,string" json:"req"`
}

func NewGreetServiceGreetArgs() *GreetServiceGreetArgs {
	return &GreetServiceGreetArgs{}
}

func (p *GreetServiceGreetArgs) InitDefault() {
	*p = GreetServiceGreetArgs{}
}

func (p *GreetServiceGreetArgs) GetReq() (v string) {
	return p.Req
}
func (p *GreetServiceGreetArgs) SetReq(val string) {
	p.Req = val
}

func (p *GreetServiceGreetArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GreetServiceGreetArgs(%+v)", *p)
}
func (p *GreetServiceGreetArgs) GetFirstArgument() interface{} {
	return p.Req
}

type GreetServiceGreetResult struct {
	Success *string `thrift:"success,0,optional" frugal:"0,optional,string" json:"success,omitempty"`
}

func NewGreetServiceGreetResult() *GreetServiceGreetResult {
	return &GreetServiceGreetResult{}
}

func (p *GreetServiceGreetResult) InitDefault() {
	*p = GreetServiceGreetResult{}
}

var GreetServiceGreetResult_Success_DEFAULT string

func (p *GreetServiceGreetResult) GetSuccess() (v string) {
	if !p.IsSetSuccess() {
		return GreetServiceGreetResult_Success_DEFAULT
	}
	return *p.Success
}
func (p *GreetServiceGreetResult) SetSuccess(x interface{}) {
	p.Success = x.(*string)
}

func (p *GreetServiceGreetResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *GreetServiceGreetResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GreetServiceGreetResult(%+v)", *p)
}
func (p *GreetServiceGreetResult) GetResult() interface{} {
	return p.Success
}

type GreetServiceGreetWithStructArgs struct {
	Req *GreetRequest `thrift:"req,1" frugal:"1,default,GreetRequest" json:"req"`
}

func NewGreetServiceGreetWithStructArgs() *GreetServiceGreetWithStructArgs {
	return &GreetServiceGreetWithStructArgs{}
}

func (p *GreetServiceGreetWithStructArgs) InitDefault() {
	*p = GreetServiceGreetWithStructArgs{}
}

var GreetServiceGreetWithStructArgs_Req_DEFAULT *GreetRequest

func (p *GreetServiceGreetWithStructArgs) GetReq() (v *GreetRequest) {
	if !p.IsSetReq() {
		return GreetServiceGreetWithStructArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *GreetServiceGreetWithStructArgs) SetReq(val *GreetRequest) {
	p.Req = val
}

func (p *GreetServiceGreetWithStructArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *GreetServiceGreetWithStructArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GreetServiceGreetWithStructArgs(%+v)", *p)
}
func (p *GreetServiceGreetWithStructArgs) GetFirstArgument() interface{} {
	return p.Req
}

type GreetServiceGreetWithStructResult struct {
	Success *GreetResponse `thrift:"success,0,optional" frugal:"0,optional,GreetResponse" json:"success,omitempty"`
}

func NewGreetServiceGreetWithStructResult() *GreetServiceGreetWithStructResult {
	return &GreetServiceGreetWithStructResult{}
}

func (p *GreetServiceGreetWithStructResult) InitDefault() {
	*p = GreetServiceGreetWithStructResult{}
}

var GreetServiceGreetWithStructResult_Success_DEFAULT *GreetResponse

func (p *GreetServiceGreetWithStructResult) GetSuccess() (v *GreetResponse) {
	if !p.IsSetSuccess() {
		return GreetServiceGreetWithStructResult_Success_DEFAULT
	}
	return p.Success
}
func (p *GreetServiceGreetWithStructResult) SetSuccess(x interface{}) {
	p.Success = x.(*GreetResponse)
}

func (p *GreetServiceGreetWithStructResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *GreetServiceGreetWithStructResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GreetServiceGreetWithStructResult(%+v)", *p)
}
func (p *GreetServiceGreetWithStructResult) GetResult() interface{} {
	return p.Success
}

type GreetEnumServiceGreetEnumArgs struct {
	Req KitexEnum `thrift:"req,1" frugal:"1,default,KitexEnum" json:"req"`
}

func NewGreetEnumServiceGreetEnumArgs() *GreetEnumServiceGreetEnumArgs {
	return &GreetEnumServiceGreetEnumArgs{}
}

func (p *GreetEnumServiceGreetEnumArgs) InitDefault() {
	*p = GreetEnumServiceGreetEnumArgs{}
}

func (p *GreetEnumServiceGreetEnumArgs) GetReq() (v KitexEnum) {
	return p.Req
}
func (p *GreetEnumServiceGreetEnumArgs) SetReq(val KitexEnum) {
	p.Req = val
}

func (p *GreetEnumServiceGreetEnumArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GreetEnumServiceGreetEnumArgs(%+v)", *p)
}
func (p *GreetEnumServiceGreetEnumArgs) GetFirstArgument() interface{} {
	return p.Req
}

type GreetEnumServiceGreetEnumResult struct {
	Success *KitexEnum `thrift:"success,0,optional" frugal:"0,optional,KitexEnum" json:"success,omitempty"`
}

func NewGreetEnumServiceGreetEnumResult() *GreetEnumServiceGreetEnumResult {
	return &GreetEnumServiceGreetEnumResult{}
}

func (p *GreetEnumServiceGreetEnumResult) InitDefault() {
	*p = GreetEnumServiceGreetEnumResult{}
}

var GreetEnumServiceGreetEnumResult_Success_DEFAULT KitexEnum

func (p *GreetEnumServiceGreetEnumResult) GetSuccess() (v KitexEnum) {
	if !p.IsSetSuccess() {
		return GreetEnumServiceGreetEnumResult_Success_DEFAULT
	}
	return *p.Success
}
func (p *GreetEnumServiceGreetEnumResult) SetSuccess(x interface{}) {
	p.Success = x.(*KitexEnum)
}

func (p *GreetEnumServiceGreetEnumResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *GreetEnumServiceGreetEnumResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GreetEnumServiceGreetEnumResult(%+v)", *p)
}
func (p *GreetEnumServiceGreetEnumResult) GetResult() interface{} {
	return p.Success
}
